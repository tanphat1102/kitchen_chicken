{
  "openapi": "3.1.0",
  "info": {
    "title": "Demo API",
    "description": "API cho thử nghiệm project",
    "license": {
      "name": "Apache 2.0",
      "url": "http://springdoc.org"
    },
    "version": "1.0"
  },
  "externalDocs": {
    "description": "Xem thêm tại SpringDoc",
    "url": "https://springdoc.org"
  },
  "servers": [
    {
      "url": "https://chickenkitchen.milize-lena.space",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get user by id (ADMIN)",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user by id (ADMIN)",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Delete user by id (ADMIN)",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get current user profile (LOGGED)",
        "operationId": "getProfile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update current user profile (LOGGED)",
        "operationId": "updateProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/payment-method/{id}": {
      "get": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Get Payment Method By Id (all actor)",
        "operationId": "getPaymentMethodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "update payment method (admin only)",
        "operationId": "updatePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Delete payment method with condition",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Change Payment Method Status (admin only)",
        "operationId": "updatePaymentMethodStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id}": {
      "get": {
        "tags": [
          "store-controller"
        ],
        "summary": "Get Store By Id",
        "operationId": "getStoreById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "store-controller"
        ],
        "summary": "Update Store",
        "operationId": "updateStore",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "store-controller"
        ],
        "summary": "Delete store with condition",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "store-controller"
        ],
        "summary": "Change Store Status",
        "operationId": "changeStoreStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/steps/{id}": {
      "get": {
        "tags": [
          "step-controller"
        ],
        "summary": "Get step by id (LOGGED)",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "step-controller"
        ],
        "summary": "Update step (MANAGER)",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStepRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "step-controller"
        ],
        "summary": "Delete step (MANAGER)",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/promotion/{id}": {
      "get": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Get promotions by Ids ",
        "operationId": "getById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Update Promotions (Manager only)",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Delete Promotion with condition",
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Update Promotion Status (Manager only)",
        "operationId": "changeStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/dishes/{dishId}": {
      "put": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "Update a dish selections and note",
        "operationId": "updateDish",
        "parameters": [
          {
            "name": "dishId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDishRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "Delete a dish from order",
        "operationId": "deleteDish",
        "parameters": [
          {
            "name": "dishId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/nutrients/{id}": {
      "get": {
        "tags": [
          "nutrient-controller"
        ],
        "summary": "Get nutrient by id (all actor)",
        "operationId": "getById_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "nutrient-controller"
        ],
        "summary": "Update nutrient (manager only)",
        "operationId": "update_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNutrientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "nutrient-controller"
        ],
        "summary": "Delete nutrient (manager only)",
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/menu-items/{id}": {
      "get": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Get menu item by id (all actor)",
        "operationId": "getById_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Update menu item (manager only)",
        "operationId": "update_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenuItemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Delete menu item (manager only)",
        "operationId": "delete_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredient/{id}": {
      "get": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Get Ingredient Detail By ID (Only Manager)",
        "operationId": "getIngredientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Update Ingredient (Only Manager)",
        "operationId": "updateIngredient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIngredientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Delete Ingredient",
        "operationId": "deleteIngredient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Change Ingredient Status (Only Manager)",
        "operationId": "changeIngredientStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/daily-menu/{id}": {
      "get": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Get Daily Menu By ID",
        "operationId": "getById_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Update Daily Menu",
        "operationId": "update_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDailyMenuRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Delete daiLy menu with condition",
        "operationId": "delete_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Get category by id (all actor)",
        "operationId": "getById_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "category-controller"
        ],
        "summary": "Update category (manager only)",
        "operationId": "update_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "category-controller"
        ],
        "summary": "Delete category (manager only)",
        "operationId": "delete_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get all users (ADMIN)",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Create new user (ADMIN)",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/grant-role": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Grant role to email (ADMIN)",
        "operationId": "grantRoleToEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/payment-method": {
      "get": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Get all payment Method (all actor)",
        "operationId": "getAllPaymentMethod",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Create payment method  (admin only)",
        "operationId": "createPaymentMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/store": {
      "get": {
        "tags": [
          "store-controller"
        ],
        "summary": "Get All Store",
        "operationId": "getAllStore",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "store-controller"
        ],
        "summary": "Create Store (Admin Only)",
        "operationId": "createStore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/steps": {
      "get": {
        "tags": [
          "step-controller"
        ],
        "summary": "Get all steps (LOGGED)",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "step-controller"
        ],
        "summary": "Create step (MANAGER)",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStepRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/promotion": {
      "get": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Get List promotions (all actor)",
        "operationId": "getAll_1",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Create Promotions (Manager only)",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/payments/vnpay/callback": {
      "post": {
        "tags": [
          "order-payment-controller"
        ],
        "summary": "VNPay callback",
        "operationId": "vnpayCallback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}/feedback": {
      "get": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "Get feedback by order id",
        "operationId": "getFeedbackByOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "Create feedback for a COMPLETED order (owner only)",
        "operationId": "createFeedback",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/vnpay-callback": {
      "post": {
        "tags": [
          "order-payment-controller"
        ],
        "summary": "VNPay callback (legacy path)",
        "operationId": "vnpayCallbackLegacy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/employee/ready/{orderId}": {
      "post": {
        "tags": [
          "order-employee-controller"
        ],
        "summary": "Employee: mark a PROCESSING order -> READY",
        "operationId": "employeeMarkReadyOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/employee/complete/{orderId}": {
      "post": {
        "tags": [
          "order-employee-controller"
        ],
        "summary": "Employee: complete a READY order -> COMPLETED",
        "operationId": "employeeCompleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/employee/accept/{orderId}": {
      "post": {
        "tags": [
          "order-employee-controller"
        ],
        "summary": "Employee: accept a CONFIRMED order -> PROCESSING",
        "operationId": "employeeAcceptOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/current/dishes": {
      "post": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "Add a dish to current NEW order (auto-create if none)",
        "operationId": "addDishToCurrentOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDishRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/confirm": {
      "post": {
        "tags": [
          "order-payment-controller"
        ],
        "summary": "Confirm order (initiate payment and return provider URL)",
        "operationId": "confirmOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/nutrients": {
      "get": {
        "tags": [
          "nutrient-controller"
        ],
        "summary": "Get all nutrients (all actor)",
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "nutrient-controller"
        ],
        "summary": "Create new nutrient (manager only)",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNutrientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/personal": {
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Send test notification to a device ",
        "operationId": "sendToTokenPersonal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/mutiple": {
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Send test notification to a device ",
        "operationId": "sendToTokenMutiple",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/menu-items": {
      "get": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Get all menu items (all actor)",
        "operationId": "getAll_3",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Create new menu item (manager only)",
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuItemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredient": {
      "get": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Get All Ingredients",
        "operationId": "getAllIngredients",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Create Ingredient (Only Manager)",
        "operationId": "createIngredient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIngredientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/daily-menu": {
      "get": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Get All Daily Menu",
        "operationId": "getAll_4",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Create Daily Menu",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyMenuRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Get all categories (all actor)",
        "operationId": "getAll_5",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "category-controller"
        ],
        "summary": "Create a new category (manager only)",
        "operationId": "create_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Refresh JWT token (LOGGED ONLY)",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Logout user (LOGGED ONLY)",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Login via Firebase payload (GUEST)",
        "operationId": "loginWithFirebase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/status": {
      "patch": {
        "tags": [
          "user-controller"
        ],
        "summary": "Toggle user status (ADMIN)",
        "operationId": "changeStatus_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/steps/{id}/order": {
      "patch": {
        "tags": [
          "step-controller"
        ],
        "summary": "Change step order (MANAGER)",
        "operationId": "changeOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StepOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/menu-items/{id}/status": {
      "patch": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Toggle menu item status (manager only)",
        "operationId": "changeStatus_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/roles": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get all roles",
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/counts": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get total users and counts by role (ADMIN)",
        "operationId": "getUserCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction": {
      "get": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Get All Transaction (manager only)",
        "operationId": "getAllTransaction",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/{id}": {
      "get": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Get Transaction By Id (manager only)",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/payment-method/counts": {
      "get": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Get total payment methods",
        "operationId": "getPaymentMethodCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/counts": {
      "get": {
        "tags": [
          "transaction-controller"
        ],
        "summary": "Get total transactions (manager only)",
        "operationId": "getTransactionCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/counts": {
      "get": {
        "tags": [
          "store-controller"
        ],
        "summary": "Get total stores",
        "operationId": "getStoreCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/steps/counts": {
      "get": {
        "tags": [
          "step-controller"
        ],
        "summary": "Get total steps (MANAGER)",
        "operationId": "getCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/promotion/counts": {
      "get": {
        "tags": [
          "promotion-controller"
        ],
        "summary": "Get total promotions",
        "operationId": "getCounts_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/statuses": {
      "get": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "List all order statuses",
        "operationId": "getAllOrderStatuses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/history": {
      "get": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "List user's orders (COMPLETED/CANCELLED/PROCESSING) by store",
        "operationId": "getOrderHistory",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/employee/confirmed": {
      "get": {
        "tags": [
          "order-employee-controller"
        ],
        "summary": "Employee: list CONFIRMED orders in employee's store",
        "operationId": "getConfirmedOrdersForEmployeeStore",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/employee/confirmed/{orderId}": {
      "get": {
        "tags": [
          "order-employee-controller"
        ],
        "summary": "Employee: get CONFIRMED order detail by id",
        "operationId": "getConfirmedOrderDetailForEmployee",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/current": {
      "get": {
        "tags": [
          "order-customer-controller"
        ],
        "summary": "Get or create NEW order by store; clear items if not in today's daily menu",
        "operationId": "getCurrentOrderByStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/nutrients/counts": {
      "get": {
        "tags": [
          "nutrient-controller"
        ],
        "summary": "Get total nutrients (manager only)",
        "operationId": "getCounts_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/menu-items/counts": {
      "get": {
        "tags": [
          "menu-item-controller"
        ],
        "summary": "Get total menu items (manager only)",
        "operationId": "getCounts_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredient/counts": {
      "get": {
        "tags": [
          "ingredient-controller"
        ],
        "summary": "Get total Ingredients",
        "operationId": "getIngredientCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/daily-menu/store/{storeId}": {
      "get": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Get daily menu by date for store with grouped categories",
        "operationId": "getByStoreAndDate",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/daily-menu/counts": {
      "get": {
        "tags": [
          "daily-menu-controller"
        ],
        "summary": "Get total daily menus",
        "operationId": "getCounts_4",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/counts": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Get total categories (manager only)",
        "operationId": "getCounts_5",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "EMPLOYEE",
              "MANAGER",
              "ADMIN",
              "STORE"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "imageURL": {
            "type": "string"
          }
        }
      },
      "ResponseModel": {
        "type": "object",
        "description": "Standard API response model",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "data": {
            "description": "Response data, can be object or null"
          }
        },
        "required": [
          "message",
          "statusCode"
        ]
      },
      "UpdateUserProfileRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "imageURL": {
            "type": "string"
          }
        }
      },
      "UpdatePaymentMethodRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "isActive"
        ]
      },
      "UpdateStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "isActive"
        ]
      },
      "UpdateStepRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "stepNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "UpdatePromotionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "discountValue": {
            "type": "integer",
            "format": "int32"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SelectionItem": {
        "type": "object",
        "properties": {
          "menuItemId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "menuItemId",
          "quantity"
        ]
      },
      "StepSelection": {
        "type": "object",
        "properties": {
          "stepId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionItem"
            }
          }
        },
        "required": [
          "items",
          "stepId"
        ]
      },
      "UpdateDishRequest": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string"
          },
          "selections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepSelection"
            }
          }
        },
        "required": [
          "selections"
        ]
      },
      "UpdateNutrientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "baseUnit": {
            "type": "string",
            "enum": [
              "G",
              "ML"
            ]
          }
        }
      },
      "MenuItemNutrientInput": {
        "type": "object",
        "properties": {
          "nutrientId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "nutrientId",
          "quantity"
        ]
      },
      "UpdateMenuItemRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "cal": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "nutrients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItemNutrientInput"
            }
          }
        }
      },
      "UpdateIngredientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "baseUnit": {
            "type": "string",
            "enum": [
              "G",
              "ML"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "batchNumber": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "baseUnit",
          "isActive"
        ]
      },
      "UpdateDailyMenuRequest": {
        "type": "object",
        "properties": {
          "storeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "menuItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "menuDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "EMPLOYEE",
              "MANAGER",
              "ADMIN",
              "STORE"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "imageURL": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "fullName",
          "isActive",
          "role"
        ]
      },
      "GrantRoleRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "EMPLOYEE",
              "MANAGER",
              "ADMIN",
              "STORE"
            ]
          },
          "fullName": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "role"
        ]
      },
      "CreatePaymentMethodRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "description",
          "isActive",
          "name"
        ]
      },
      "CreateStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "createAt": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "address",
          "createAt",
          "isActive",
          "name",
          "phone"
        ]
      },
      "CreateStepRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "stepNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "categoryId",
          "isActive",
          "name",
          "stepNumber"
        ]
      },
      "CreatePromotionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "discountType": {
            "type": "string",
            "enum": [
              "PERCENT",
              "AMOUNT"
            ]
          },
          "discountValue": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "discountType",
          "discountValue",
          "endDate",
          "isActive",
          "name",
          "quantity",
          "startDate"
        ]
      },
      "CreateFeedbackRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "rating"
        ]
      },
      "CreateDishRequest": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "integer",
            "format": "int64"
          },
          "note": {
            "type": "string"
          },
          "selections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepSelection"
            }
          }
        },
        "required": [
          "selections",
          "storeId"
        ]
      },
      "OrderConfirmRequest": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "promotionId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "orderId",
          "paymentMethodId"
        ]
      },
      "CreateNutrientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "baseUnit": {
            "type": "string",
            "enum": [
              "G",
              "ML"
            ]
          }
        },
        "required": [
          "baseUnit",
          "name"
        ]
      },
      "NotificationRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "title",
          "token"
        ]
      },
      "MultipleNotificationRequest": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "title",
          "tokens"
        ]
      },
      "CreateMenuItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "cal": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "nutrients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItemNutrientInput"
            }
          }
        },
        "required": [
          "cal",
          "categoryId",
          "isActive",
          "name",
          "price"
        ]
      },
      "CreateIngredientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "baseUnit": {
            "type": "string",
            "enum": [
              "G",
              "ML"
            ]
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "imageUrl": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "storeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "batchNumber": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "baseUnit",
          "batchNumber",
          "createAt",
          "imageUrl",
          "isActive",
          "name",
          "quantity",
          "storeIds"
        ]
      },
      "CreateDailyMenuRequest": {
        "type": "object",
        "properties": {
          "menuItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "menuDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "menuDate",
          "menuItemIds"
        ]
      },
      "CreateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "FirebaseLoginRequest": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string"
          },
          "fcmToken": {
            "type": "string"
          }
        },
        "required": [
          "idToken"
        ]
      },
      "StepOrderRequest": {
        "type": "object",
        "properties": {
          "stepNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "stepNumber"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "Nhập JWT token để xác thực",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}